<Root version = "1.0a" renderer = "GL440">  <VertexShaderBody name = "vertShaderP1">    #version 430    #extension GL_ARB_separate_shader_objects: enable        layout(location = 0) in vec3 vertex_position;    layout(location = 1) in vec2 uv;        layout(location = 0) out vec3 position_out;    layout(location = 1) out vec2 uv_out;        out gl_PerVertex    {      vec4 gl_Position;    };        void main() {      gl_Position = vec4(vertex_position,1.0);      position_out = vec4(vertex_position,1.0).xyz;      uv_out = uv;    }  </VertexShaderBody>  <FragmentShaderBody name = "fragShaderP1">    #version 430    #extension GL_ARB_separate_shader_objects: enable        layout(location = 0) in vec3 position_in;    layout(location = 1) in vec2 uv_in;        layout(location = 0) out vec3 texPosOut;    layout(location = 1) out vec3 texColorOut;            uniform sampler2D textureSampler;        void main() {      texPosOut = position_in;      texColorOut = texture(textureSampler,uv_in).rgb;    }  </FragmentShaderBody>  <VertexShaderBody name ="vertShaderP2">    #version 430    #extension GL_ARB_separate_shader_objects: enable    layout(location = 0) in vec3 vertex_position;    layout(location = 1) in vec2 uv;    layout(location = 1) out vec2 uv_out;    out gl_PerVertex    {     vec4 gl_Position;    };    void main() {      gl_Position = vec4(vertex_position,1.0);      uv_out = uv;    }  </VertexShaderBody>  <FragmentShaderBody name ="fragShaderP2">    #version 430    #extension GL_ARB_separate_shader_objects: enable        layout(location = 1) in vec2 uv_in;    out vec3 color;        layout(binding = 0) uniform sampler2D posTex;    layout(binding = 1) uniform sampler2D colorTex;    void main() {      color = texture(colorTex,uv_in).rgb * texture(posTex,uv_in).rgb;    }  </FragmentShaderBody>  <ResourceBody name = "resource" type = "FX_RESOURCE_2D">    <SamplerState name = "sstate0">      <!--use state interpreter and change it to FX_!-->      <FX_TEXTURE_MIN_FILTER value = "FX_LINEAR"/>       <FX_TEXTURE_MAG_FILTER value = "FX_LINEAR"/>      <FX_TEXTURE_WRAP_S value = "FX_REPEAT"/>      <FX_TEXTURE_WRAP_T value = "FX_REPEAT"/>    </SamplerState>    <Texture binding = "0"/>  </ResourceBody>  <ResourceBody name ="positionTex" type ="FX_RESOURCE_RENDERTEX">    <InternalFormat format = "FX_RGB32F" />    <Size w = "800" h = "800"/>    <MSAA value = "false"/>    <Texture binding = "0"/>  </ResourceBody>  <ResourceBody name ="diffTex" type ="FX_RESOURCE_RENDERTEX">    <InternalFormat format = "FX_RGB32F" />    <Size w = "800" h = "800"/>    <MSAA value = "false"/>    <Texture binding = "1"/>  </ResourceBody>  <ResourceBody name ="normalTex" type ="FX_RESOURCE_RENDERTEX">    <InternalFormat format = "FX_RGB32F" />    <Size w = "800" h = "800"/>    <MSAA value = "false"/>    <Texture binding = "2"/>  </ResourceBody>  <ResourceBody name ="depthTex" type ="FX_RESOURCE_DEPTHTEX">    <InternalFormat format ="FX_DEPTH_COMPONENT"/>  </ResourceBody>  <FrameBufferObjectBody name = "frameBufferObject">    <RenderTexture attachment ="0">positionTex</RenderTexture>    <RenderTexture attachment ="1">diffTex</RenderTexture>    <!--<RenderTexture attachment ="2">normalTex</RenderTexture>-->    <DepthTexture>depthTex</DepthTexture>  </FrameBufferObjectBody>  <Effect name = "Effect0">    <Technique name = "Technique0">      <Pass name = "Pass0">        <!-- only overrides can specify naming -->        <VertexShader>vertShaderP1</VertexShader> <!--remove the additional name= thing because there can be items with the same names in multiple passes-->        <FragmentShader>fragShaderP1</FragmentShader>        <Resource binding ="0">resource</Resource>        <ClearMode clear1 ="FX_COLOR_BUFFER_BIT" clear2="FX_DEPTH_BUFFER_BIT" />        <RenderTarget>frameBufferObject</RenderTarget>        <RenderingMode mode ="FX_DO_NOTHING"/>        <!--<State type = "FX_BLEND" blend = "true"/>!-->      </Pass>      <Pass name="Pass1">        <VertexShader>vertShaderP2</VertexShader>        <FragmentShader>fragShaderP2</FragmentShader>        <Resource binding ="0">positionTex</Resource>        <Resource binding ="1">diffTex</Resource>        <!--<Resource>normalTex</Resource>-->        <ClearMode clear1 ="FX_COLOR_BUFFER_BIT"/>        <RenderTarget>FX_BACKBUFFER</RenderTarget>        <RenderingMode mode ="FX_DRAW_FULLSCREEN_QUAD"/>        <State type ="FX_BLEND" blend ="true"/>      </Pass>    </Technique>  </Effect></Root>